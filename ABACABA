from telegram import Update
from telegram.ext import Application, CommandHandler, CallbackContext, MessageHandler, filters
import logging
import openai

DEBUG = 1

openai.api_key = 'СЕКРЕТ'


def __debug(msg):
    if DEBUG:
        print("\033[94m[DEBUG]\033[0m", msg)

async def start(update: Update, context: CallbackContext):
    __debug("CALL start")
    await update.message.reply_text(
        "Selam! Sana nasıl yardım edebileceğimi öğrenmek için /help yazabilirsin.")

async def help(update: Update, context: CallbackContext):
    __debug("CALL help")
    await update.message.reply_text(
        "/video_at - sana Youtube’da şu an trend olan videolardan birini atarım.\n"
        "/haber_at - sana BBC’de en çok okunan haberlerden birini atarım.\n\n"
        "/help - bu yardım mesajını gösterir")

async def handle_message(update: Update, context: CallbackContext):
    user_message = update.message.text
    __debug(f"User message: {user_message}")

    # Вызов ChatGPT
    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "user", "content": user_message}
        ]
    )
    chat_gpt_message = response.choices[0].message['content']
    __debug(f"ChatGPT response: {chat_gpt_message}")

    # Отправка ответа пользователю
    await update.message.reply_text(chat_gpt_message)
def main():
    __debug("CALL main")

    __debug("main: Initializing application")
    application = Application.builder().token("7345382556:AAGCWf3vKfAxKE7VG4JsvUToD8fDxzkAWo4").build()

    __debug("main: Configuring handlers")
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    __debug("main: Starting idle process")
    application.run_polling()

if __name__ == "__main__":
    main()
